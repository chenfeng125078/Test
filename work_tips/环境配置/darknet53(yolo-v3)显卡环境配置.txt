yolo-v3 cpu运行步骤:

    1.　git clone https://github.com/pjreddie/darknet　(复制源码)

    2.　cd darknet

    3.　make (编译)

    4.　wget https://pjreddie.com/media/files/yolov3.weights (下载已训练好的权重参数)

    5.　./darknet detect cfg/yolov3.cfg yolov3.weights data/dog.jpg (输入一张图片进行预测)通过改变最后一个参数 data/dog.jpg 改变输入的图片

yolo-v3 gpu版本运行步骤:

    1.　git clone https://github.com/pjreddie/darknet　(复制源码)

    2.　cd darknet

    3.　sudo gedit Makefile (修改文件参数,使其在gpu上运行) 

    4.以下为修改的部分
        1.GPU=0 --> GPU=1
        2.CUDNN=0 --> CUDNN=1
        3.DEBUG=0 --> DEBUG=1
        4.NVCC=/usr/local/cuda/cuda/bin/nvcc --> NVCC=/usr/local/cuda-8.0/bin/nvcc(这里nvcc所在位置注意修改成自己的cuda版本下的)
        5.COMMON+= -DGPU -I/usr/local/cuda/include --> COMMON+= -DGPU -I/usr/local/cuda-8.0/include
        6.LDFLAGS+= -L/usr/local/cuda/lib64 -lcuda -lcudart -lcublas -lcurand --> LDFLAGS+= -L/usr/local/cuda-8.0/lib64 -lcuda -lcudart -lcublas -lcurand

    5. export PATH=/usr/local/cuda-8.0/lib64:$PATH  (添加临时环境变量,只在该终端中有用)

    6. ./darknet detect cfg/yolov3.cfg yolov3.weights data/dog.jpg

    7.　完整问题描述:error while loading shared libraries: libcudnn.so.*: cannot open shared object file: No such file or directory
        
        (已确保其存在,且生成软链接,环境变量也没问题)　只在.bashrc中,添加环境变量,有时不能解决.

        用如下命令可解决(创建一个 cuda.conf文件,将cuda-8.0 lib64路径加入文件,sudo ldconfig进行更新)

        1.cd /etc/ld.so.conf.d(可以先查看一下是否存在cuda.conf)

        2.sudo gedit cuda.conf

        3.将cuda-8.0 lib64路径加入文件　(/usr/local/cuda-8.0/lib64)

        4.sudo ldconfig

        5.再运行检测脚本 ./darknet detect cfg/yolov3.cfg yolov3.weights data/dog.jpg


