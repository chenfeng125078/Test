环境配置包括：文件目录 (头文件.h)、静态库目录( .lib )、动态库( .dll )
1.基于vs2013新建一个项目：
	文件--> 新建--> 项目--> win32控制台应用程序--> 根据自己需要修改项目文件名 --> 下一步 --> 选择空项目选项

2.win32转 x_64、debug来调试项目
	鼠标右键项目 --> 属性 --> 配置管理器( 右上角) --> 活动解决方案配置选Debug --> 解决方案平台选 X_64 --> 新建 --> 在键入或选择新平台栏选择x_64 --> 完成

3.文件目录（头文件.h ）配置
	鼠标右键项目 --> 属性 --> 配置属性  --> C/C++ --> 常规 -->  附加包含目录 --> 把所需要添加的 头文件.h 目录添加进去

	注意：有些 function 会发生冲突，所以需要在预处理器 添加 _CRT_SECURE_NO_WARNINGS
		在   C/C++ -->  预处理器  --> 预处理器定义  添加：_CRT_SECURE_NO_WARNINGS

4.静态库目录 ( .lib ) 配置
	首先要知道 静态库 配置 不仅需要指定 静态库的 路径,  还需要指定需要 添加的静态库（相当于python内的第三方库）,为什么 .h 文件不需要指定哪个.h文件？
		那是因为在代码内会 # include<**.h>,当然静态库也可以通过代码内指定 #pragma comment(lib,"xxxxx.lib")
	但通常使用的方法是在配置内指定 需要的 .lib
	
	在配置内添加 .lib 的路径：  属性 --> 链接器 --> 常规 --> 附加库目录 --> 添加路径（以当前项目为当前路径）
	在配置内添加所需要的.lib( 以opencv的 .lib 为例 ):   属性 -- 链接器 -- 输入 --  附加依赖项 -- 添加 opencv_world320d.lib
	
5.动态库（.dll）配置
	若编译完成后提示 缺少 **.dll 的错误，此时就是缺少该动态库
	解决方法：将缺少的dll动态库 复制到  该项目/X64/Debug下

